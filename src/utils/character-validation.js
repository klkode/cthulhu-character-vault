export function validateInvestigatorDetails(characterDetails){
    const {name, age, gender, birthplace, residence} = characterDetails;
    const errMsgs = {
        hasError: false,
        nameErr: "",
        ageErr: "",
        genderErr: "",
        birthplaceErr: "",
        residenceErr: ""
    }

    // Name is required, is a string, and is limited to XX characters

    // Age is required, is a number, and is limited to XX characters

    // Gender is required, is a string, and is limited to XX characters

    // Birthplace is required, is a string, and is limited to XX characters

    // Residence is required, is a string, and is limited to XX characters


    // Return the errMsgs object to give a report on what the validation check discovered
    return errMsgs;

}

export function validateInvestigatorStats(characterStats){
    const {strength, dexterity, consitution, size, appearance, intelligence, education, power, luck} = characterStats;
    const errMsgs = {
        hasError: false,
        strengthErr: "",
        dexterityErr: "",
        consitutionErr: "", 
        sizeErr: "",
        appearanceErr: "",
        intelligenceErr: "",
        educationErr: "",
        powerErr: "", 
        luckErr: ""
    }

    /*This website only supports making "human" characters so a maximum of 99 is imposed on character statistics.
    Similarily, a minimum score of 1 is imposed on all statistics except Luck (as Luck can run out).
    All stats are required.
    All stats must be integer numbers.
    The calculated fields can are generated by the website and can be presumed correct.
    */


    // Return the errMsgs object to give a report on what the validation check discovered
    return errMsgs;
}

export function validateUpdatedStats(characterStats){
    const {strength, dexterity, consitution, size, appearance, intelligence, education, power, luck, sanity, health, build, movement, magic_points} = characterStats;
    const errMsgs = {
        hasError: false,
        strengthErr: "",
        dexterityErr: "",
        consitutionErr: "", 
        sizeErr: "",
        appearanceErr: "",
        intelligenceErr: "",
        educationErr: "",
        powerErr: "", 
        luckErr: "",
        sanityErr: "",
        healthErr: "",
        magicPointsErr: "",
        movementErr: "",
        buildErr: ""
    }

    /*This website only supports making "human" characters so a maximum of 99 is imposed on character statistics.
    Similarily, a minimum score of 1 is imposed on all statistics except Luck, Sanity, Health, Magic Points, and Build.
    All stats are required.
    All stats must be integer numbers.
    */


    // Return the errMsgs object to give a report on what the validation check discovered
    return errMsgs;
}

export function validateInvestigatorSkills(background, occupationalSkills, personalSkills){
    const errMsgs = {
        hasError: false,
        bagroundErr: "",
        occupationalSkillsErr: [],
        personalSkillsErr: []
    }

    /* An investigator must have selected a background.
    An investigator must have chosen 8 occupational skills.
    The values of the occupational skills must be integer numbers.
    Skill points cannot be less than the skill's base value.
    Skill points cannot exceed 99.
    Skill points cannot be lower than 1 (except for Cthulhu Mythos which starts at 0)
    Skill points must be integer numbers
    If a skill has been added, it must have a skill and points value associted with it (else it should be removed)
    */

    return errMsgs;

}

export function validateUpdatedSkills(characterSkills){
    const errMsgs = { hasError: false, skillErrs: [] };
    /* Make sure all skills have a value
    That value is an unsigned integer
    That value is greater or equal to its base value
    That value is less than 100 
    */

    for(let index = 0; index < characterSkills.length; index++){
        
    }

    return errMsgs;
}

export function validateInvestigatorExtras(characterExtras){
    const {special_people, favoured_possession, traits, feats, mania, injuries, spells, notes} = characterExtras;
    
    const errMsgs = {
        hasError: false,
        specialPeopleErr: "",
        favouredPossessionErr: "",
        traitsErr: "", 
        featsErr: "",
        maniaErr: "",
        injuriesErr: "",
        spellsErr: "",
        notesErr: ""
    }

    // At this time, none of these fields are required so the only check necessary if to make sure that their size is under the dataset's character limit



    // Return the errMsgs object to give a report on what the validation check discovered
    return errMsgs;
}

export function validateCharacter(){

}